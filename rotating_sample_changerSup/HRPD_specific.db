record(ao, "$(P)GET_VR:SP")
{
	field(DESC, "Variable to get from GET_VR") 
	field(FLNK, "$(P)GET_VR_MAG")
	info(INTEREST, "MEDIUM")
	field(EGU, "") # Setting a memory location
}

record(bi, "$(P)GET_VR:POLARITY")
{
	field(ZNAM, "+")
	field(ONAM, "-")
}

record(ai, "$(P)GET_VR_MAG")
{
    field(SCAN, "1 second")
	field(DTYP, "stream")
	field(INP, "@rotsc_1.proto getVR($(P),GET_VR:SP,GET_VR:POLARITY) $(PORT)")
	field(FLNK, "$(P)GET_VR:POLARITY")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:GET_VR_MAG")
    field(SDIS, "$(P)DISABLE")
}

record(scalcout, "$(P)CALC_GET_VR")
{
    field(INAA, "$(P)GET_VR:POLARITY CP MS")
    field(INBB, "$(P)GET_VR_MAG CP MS") 
	field(CALC, "AA+BB")
	field(OUT, "$(P)GET_VR PP MS")
}

record(ai, "$(P)GET_VR")
{
	field(DESC, "Get value of specified var")
	info(INTEREST, "MEDIUM")
	field(EGU, "") # Only known at runtime
}

record(scalcout, "$(P)CALC_MTR_1_ENB")
{
    field(CALC, "AA[0,0]")
    field(INAA, "$(P)RAW_STATUS CP MS")
    field(OUT, "$(P)MTR_1_ENABLED PP MS")
	field(IVOA, "Don't drive outputs")
}

record(bo, "$(P)MTR_1_ENABLED")
{
    field(DESC, "Is motor 1 is enabled")
	field(ONAM, "ENABLED")
	field(ZNAM, "DISABLED")
	info(INTEREST, "MEDIUM")
}

record(scalcout, "$(P)CALC_MTR_0_ENB")
{
    field(CALC, "AA[1,1]")
    field(INAA, "$(P)RAW_STATUS CP MS")
    field(OUT, "$(P)MTR_0_ENABLED PP MS")
	field(IVOA, "Don't drive outputs")
}

record(bo, "$(P)MTR_0_ENABLED")
{
    field(DESC, "Is motor 0 is enabled")
	field(ONAM, "ENABLED")
	field(ZNAM, "DISABLED")
	info(INTEREST, "MEDIUM")
}

record(scalcout, "$(P)CALC_MTR_1_DIRECTION")
{
    field(CALC, "AA[12,12]")
    field(INAA, "$(P)RAW_STATUS CP MS")
    field(OUT, "$(P)MOTOR_1_DIRECTION PP MS")
	field(IVOA, "Don't drive outputs")
}

record(bo, "$(P)MOTOR_1_DIRECTION")
{
	field(DESC, "Rotation dir motor 1")
	field(ONAM, "RAISE")
	field(ZNAM, "LOWER")
	info(INTEREST, "MEDIUM")
}

record(scalcout, "$(P)CALC_MTR_1_STATUS")
{
    field(CALC, "AA[13,13]")
    field(INAA, "$(P)RAW_STATUS CP MS")
    field(OUT, "$(P)MOTOR_1_STATUS PP MS")
	field(IVOA, "Don't drive outputs")
}

record(bo, "$(P)MOTOR_1_STATUS")
{
	field(DESC, "The status of motor 1")
	field(ONAM, "ERROR")
	field(ZNAM, "WORKING")
	info(INTEREST, "MEDIUM")
}

record(scalcout, "$(P)CALC_MTR_0_STATUS")
{
    field(CALC, "AA[6,6]")
    field(INAA, "$(P)RAW_STATUS CP MS")
    field(OUT, "$(P)MOTOR_0_STATUS PP MS")
	field(IVOA, "Don't drive outputs")
}

record(bo, "$(P)MOTOR_0_STATUS")
{
	field(DESC, "The status of motor 0")
	field(ONAM, "ERROR")
	field(ZNAM, "WORKING")
	info(INTEREST, "MEDIUM")
}

record(scalcout, "$(P)CALC_MTR_0_DIRECTION")
{
    field(CALC, "AA[15,15]")
    field(INAA, "$(P)RAW_STATUS CP MS")
    field(OUT, "$(P)MOTOR_0_DIRECTION PP MS")
	field(IVOA, "Don't drive outputs")
}

record(bo, "$(P)MOTOR_0_DIRECTION")
{
	field(DESC, "Rotation dir motor 0")
	field(ONAM, "BACKWARD")
	field(ZNAM, "FORWARD")
	info(INTEREST, "MEDIUM")
}

record(ao, "$(P)POSN:NO_LOWER:SP")
{
	field(DTYP, "stream")
	field(DESC, "Move to the given position")
	field(OUT, "@rotsc_1.proto moveNoLower($(P)$(CMD_ERR)_NUMBER) $(PORT)")
	info(INTEREST, "MEDIUM")
	field(EGU, "")
    field(SIML, "$(P)SIM")
    field(SIOL, "$(P)SIM:POSN:NO_LOWER:SP")
    field(SDIS, "$(P)DISABLE")
}

### SIMULATION RECORDS ###

record(ai, "$(P)SIM:GET_VR_MAG")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}

record(ao, "$(P)SIM:POSN:NO_LOWER:SP")
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
}
